import { useState, useContext, useEffect } from 'react'
import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import Frame from '@/components/molecules/Frame/Frame'
import ProfileCard from '@/components/molecules/ProfileCard/Profile'
import { Modal } from '@/components/molecules/Modal/Modal'
import { CreateGallerieForm } from '@/components/molecules/CreateGallerieForm/CreateGallerieForm'
import AuthContext from '@/context/auth.context'
import { getAllGallery } from '@/utils/firebase/gallery.firestore'
import AddCircleIcon from '@mui/icons-material/AddCircle';
import { IconContainer, AddGallerieModal } from './Gallerie.style'

const inter = Inter({ subsets: ['latin'] })



export default function Gallerie() {
const [isModalOpen, setModalOpen] = useState(false);

const {user, loading} = useContext(AuthContext);
const [data, setData] = useState<any[]>()

const array = data

useEffect(() => {
    if(user){
        getAllGallery().then(el=> setData(el));
    }
}, [user])

const userGallery = array?.filter(item => item.userImage.userImageId === user.uid)







const CloseModal = () => {
  setModalOpen(false);
};

  return (
   <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <ProfileCard fullName={user.displayName} email={user.email}/>
        <IconContainer onClick={() => setModalOpen(true)}>
          <AddGallerieModal color='primary'/>
        </IconContainer>
        <div className={styles.content}>
            {userGallery?.map(item => (<Frame id={item.id} key={item.id} src={item.userImage.image} width={200} height={200} alt={item.userImage.image}/>))}
        </div>
      </main>
      <Modal formComponent={<CreateGallerieForm galleryArray={data} userId={user.uid} onClose={CloseModal}/>} isModalOpen={isModalOpen} handleModalClose={CloseModal}/>
      
    </>
  )
}
